@256 // 0
D=A // 1
@SP // 2
M=D // 3
@Sys.initRET0 // 4
D=A // 5
@SP // 6
A=M // 7
M=D // 8
@SP // 9
M=M+1 // 10
@LCL // 11
D=M // 12
@SP // 13
A=M // 14
M=D // 15
@SP // 16
M=M+1 // 17
@ARG // 18
D=M // 19
@SP // 20
A=M // 21
M=D // 22
@SP // 23
M=M+1 // 24
@THIS // 25
D=M // 26
@SP // 27
A=M // 28
M=D // 29
@SP // 30
M=M+1 // 31
@THAT // 32
D=M // 33
@SP // 34
A=M // 35
M=D // 36
@SP // 37
M=M+1 // 38
@SP // 39
D=M // 40
@LCL // 41
M=D // 42
@5 // 43
D=D-A // 44
@ARG // 45
M=D // 46
@Sys.init // 47
0;JMP // 48
(Sys.initRET0)
//////
// Main
// function Main.fibonacci 0
(Main.fibonacci)
// push argument 0
@ARG // 49
D=M // 50
@0 // 51
A=D+A // 52
D=M // 53
@SP // 54
A=M // 55
M=D // 56
@SP // 57
M=M+1 // 58
// push constant 2
@2 // 59
D=A // 60
@SP // 61
A=M // 62
M=D // 63
@SP // 64
M=M+1 // 65
// lt
@SP // 66
M=M-1 // 67
A=M // 68
D=M // 69
@SP // 70
M=M-1 // 71
@SP // 72
A=M // 73
D=M-D // 74
@BOOL0 // 75
D;JLT // 76
@SP // 77
A=M // 78
M=0 // 79
@ENDBOOL0 // 80
0;JMP // 81
(BOOL0)
@SP // 82
A=M // 83
M=-1 // 84
(ENDBOOL0)
@SP // 85
M=M+1 // 86
// if-goto N_LT_2
@SP // 87
M=M-1 // 88
A=M // 89
D=M // 90
@Main$N_LT_2 // 91
D;JNE // 92
// goto N_GE_2
@Main$N_GE_2 // 93
0;JMP // 94
// label N_LT_2
(Main$N_LT_2)
// push argument 0
@ARG // 95
D=M // 96
@0 // 97
A=D+A // 98
D=M // 99
@SP // 100
A=M // 101
M=D // 102
@SP // 103
M=M+1 // 104
// return
@LCL // 105
D=M // 106
@R13 // 107
M=D // 108
@R13 // 109
D=M // 110
@5 // 111
D=D-A // 112
A=D // 113
D=M // 114
@R14 // 115
M=D // 116
@SP // 117
M=M-1 // 118
A=M // 119
D=M // 120
@ARG // 121
A=M // 122
M=D // 123
@ARG // 124
D=M // 125
@SP // 126
M=D+1 // 127
@R13 // 128
D=M // 129
@1 // 130
D=D-A // 131
A=D // 132
D=M // 133
@THAT // 134
M=D // 135
@R13 // 136
D=M // 137
@2 // 138
D=D-A // 139
A=D // 140
D=M // 141
@THIS // 142
M=D // 143
@R13 // 144
D=M // 145
@3 // 146
D=D-A // 147
A=D // 148
D=M // 149
@ARG // 150
M=D // 151
@R13 // 152
D=M // 153
@4 // 154
D=D-A // 155
A=D // 156
D=M // 157
@LCL // 158
M=D // 159
@R14 // 160
A=M // 161
0;JMP // 162
// label N_GE_2
(Main$N_GE_2)
// push argument 0
@ARG // 163
D=M // 164
@0 // 165
A=D+A // 166
D=M // 167
@SP // 168
A=M // 169
M=D // 170
@SP // 171
M=M+1 // 172
// push constant 2
@2 // 173
D=A // 174
@SP // 175
A=M // 176
M=D // 177
@SP // 178
M=M+1 // 179
// sub
@SP // 180
M=M-1 // 181
A=M // 182
D=M // 183
@SP // 184
M=M-1 // 185
@SP // 186
A=M // 187
M=M-D // 188
@SP // 189
M=M+1 // 190
// call Main.fibonacci 1
@Main.fibonacciRET1 // 191
D=A // 192
@SP // 193
A=M // 194
M=D // 195
@SP // 196
M=M+1 // 197
@LCL // 198
D=M // 199
@SP // 200
A=M // 201
M=D // 202
@SP // 203
M=M+1 // 204
@ARG // 205
D=M // 206
@SP // 207
A=M // 208
M=D // 209
@SP // 210
M=M+1 // 211
@THIS // 212
D=M // 213
@SP // 214
A=M // 215
M=D // 216
@SP // 217
M=M+1 // 218
@THAT // 219
D=M // 220
@SP // 221
A=M // 222
M=D // 223
@SP // 224
M=M+1 // 225
@SP // 226
D=M // 227
@LCL // 228
M=D // 229
@6 // 230
D=D-A // 231
@ARG // 232
M=D // 233
@Main.fibonacci // 234
0;JMP // 235
(Main.fibonacciRET1)
// push argument 0
@ARG // 236
D=M // 237
@0 // 238
A=D+A // 239
D=M // 240
@SP // 241
A=M // 242
M=D // 243
@SP // 244
M=M+1 // 245
// push constant 1
@1 // 246
D=A // 247
@SP // 248
A=M // 249
M=D // 250
@SP // 251
M=M+1 // 252
// sub
@SP // 253
M=M-1 // 254
A=M // 255
D=M // 256
@SP // 257
M=M-1 // 258
@SP // 259
A=M // 260
M=M-D // 261
@SP // 262
M=M+1 // 263
// call Main.fibonacci 1
@Main.fibonacciRET2 // 264
D=A // 265
@SP // 266
A=M // 267
M=D // 268
@SP // 269
M=M+1 // 270
@LCL // 271
D=M // 272
@SP // 273
A=M // 274
M=D // 275
@SP // 276
M=M+1 // 277
@ARG // 278
D=M // 279
@SP // 280
A=M // 281
M=D // 282
@SP // 283
M=M+1 // 284
@THIS // 285
D=M // 286
@SP // 287
A=M // 288
M=D // 289
@SP // 290
M=M+1 // 291
@THAT // 292
D=M // 293
@SP // 294
A=M // 295
M=D // 296
@SP // 297
M=M+1 // 298
@SP // 299
D=M // 300
@LCL // 301
M=D // 302
@6 // 303
D=D-A // 304
@ARG // 305
M=D // 306
@Main.fibonacci // 307
0;JMP // 308
(Main.fibonacciRET2)
// add
@SP // 309
M=M-1 // 310
A=M // 311
D=M // 312
@SP // 313
M=M-1 // 314
@SP // 315
A=M // 316
M=M+D // 317
@SP // 318
M=M+1 // 319
// return
@LCL // 320
D=M // 321
@R13 // 322
M=D // 323
@R13 // 324
D=M // 325
@5 // 326
D=D-A // 327
A=D // 328
D=M // 329
@R14 // 330
M=D // 331
@SP // 332
M=M-1 // 333
A=M // 334
D=M // 335
@ARG // 336
A=M // 337
M=D // 338
@ARG // 339
D=M // 340
@SP // 341
M=D+1 // 342
@R13 // 343
D=M // 344
@1 // 345
D=D-A // 346
A=D // 347
D=M // 348
@THAT // 349
M=D // 350
@R13 // 351
D=M // 352
@2 // 353
D=D-A // 354
A=D // 355
D=M // 356
@THIS // 357
M=D // 358
@R13 // 359
D=M // 360
@3 // 361
D=D-A // 362
A=D // 363
D=M // 364
@ARG // 365
M=D // 366
@R13 // 367
D=M // 368
@4 // 369
D=D-A // 370
A=D // 371
D=M // 372
@LCL // 373
M=D // 374
@R14 // 375
A=M // 376
0;JMP // 377
//////
// Sys
// function Sys.init 0
(Sys.init)
// push constant 4
@4 // 378
D=A // 379
@SP // 380
A=M // 381
M=D // 382
@SP // 383
M=M+1 // 384
// call Main.fibonacci 1
@Main.fibonacciRET3 // 385
D=A // 386
@SP // 387
A=M // 388
M=D // 389
@SP // 390
M=M+1 // 391
@LCL // 392
D=M // 393
@SP // 394
A=M // 395
M=D // 396
@SP // 397
M=M+1 // 398
@ARG // 399
D=M // 400
@SP // 401
A=M // 402
M=D // 403
@SP // 404
M=M+1 // 405
@THIS // 406
D=M // 407
@SP // 408
A=M // 409
M=D // 410
@SP // 411
M=M+1 // 412
@THAT // 413
D=M // 414
@SP // 415
A=M // 416
M=D // 417
@SP // 418
M=M+1 // 419
@SP // 420
D=M // 421
@LCL // 422
M=D // 423
@6 // 424
D=D-A // 425
@ARG // 426
M=D // 427
@Main.fibonacci // 428
0;JMP // 429
(Main.fibonacciRET3)
// label END
(Sys$END)
// goto END
@Sys$END // 430
0;JMP // 431
